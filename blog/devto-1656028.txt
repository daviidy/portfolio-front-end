3:I[9275,[],""]
5:I[1343,[],""]
6:I[4858,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"ThemeProvider"]
7:I[9736,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"TooltipProvider"]
8:I[6691,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"Dock"]
9:I[6691,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"DockIcon"]
a:I[9736,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"Tooltip"]
b:I[9736,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"TooltipTrigger"]
c:I[231,["231","static/chunks/231-2d095471957ff3d5.js","173","static/chunks/173-06ea4b2e1871cc35.js","308","static/chunks/app/blog/%5Bslug%5D/page-180ef92bcd4a6ad4.js"],""]
d:I[9736,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"TooltipContent"]
e:I[9973,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"Separator"]
10:I[7363,["310","static/chunks/0e5ce63c-e21fe8bbb1ba0e0f.js","231","static/chunks/231-2d095471957ff3d5.js","633","static/chunks/633-2667c71f837e2c91.js","685","static/chunks/685-38d3d3a09bf3d7e5.js","392","static/chunks/392-a90341f24030e785.js","185","static/chunks/app/layout-a6b5bc5d75b10efa.js"],"ModeToggle"]
4:["slug","devto-1656028","d"]
f:T843,M409.132 114.573c-19.608-33.596-46.205-60.194-79.798-79.8-33.598-19.607-70.277-29.408-110.063-29.408-39.781 0-76.472 9.804-110.063 29.408-33.596 19.605-60.192 46.204-79.8 79.8C9.803 148.168 0 184.854 0 224.63c0 47.78 13.94 90.745 41.827 128.906 27.884 38.164 63.906 64.572 108.063 79.227 5.14.954 8.945.283 11.419-1.996 2.475-2.282 3.711-5.14 3.711-8.562 0-.571-.049-5.708-.144-15.417a2549.81 2549.81 0 01-.144-25.406l-6.567 1.136c-4.187.767-9.469 1.092-15.846 1-6.374-.089-12.991-.757-19.842-1.999-6.854-1.231-13.229-4.086-19.13-8.559-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-.951-2.568-2.098-3.711-3.429-1.142-1.331-1.997-2.663-2.568-3.997-.572-1.335-.098-2.43 1.427-3.289 1.525-.859 4.281-1.276 8.28-1.276l5.708.853c3.807.763 8.516 3.042 14.133 6.851 5.614 3.806 10.229 8.754 13.846 14.842 4.38 7.806 9.657 13.754 15.846 17.847 6.184 4.093 12.419 6.136 18.699 6.136 6.28 0 11.704-.476 16.274-1.423 4.565-.952 8.848-2.383 12.847-4.285 1.713-12.758 6.377-22.559 13.988-29.41-10.848-1.14-20.601-2.857-29.264-5.14-8.658-2.286-17.605-5.996-26.835-11.14-9.235-5.137-16.896-11.516-22.985-19.126-6.09-7.614-11.088-17.61-14.987-29.979-3.901-12.374-5.852-26.648-5.852-42.826 0-23.035 7.52-42.637 22.557-58.817-7.044-17.318-6.379-36.732 1.997-58.24 5.52-1.715 13.706-.428 24.554 3.853 10.85 4.283 18.794 7.952 23.84 10.994 5.046 3.041 9.089 5.618 12.135 7.708 17.705-4.947 35.976-7.421 54.818-7.421s37.117 2.474 54.823 7.421l10.849-6.849c7.419-4.57 16.18-8.758 26.262-12.565 10.088-3.805 17.802-4.853 23.134-3.138 8.562 21.509 9.325 40.922 2.279 58.24 15.036 16.18 22.559 35.787 22.559 58.817 0 16.178-1.958 30.497-5.853 42.966-3.9 12.471-8.941 22.457-15.125 29.979-6.191 7.521-13.901 13.85-23.131 18.986-9.232 5.14-18.182 8.85-26.84 11.136-8.662 2.286-18.415 4.004-29.263 5.146 9.894 8.562 14.842 22.077 14.842 40.539v60.237c0 3.422 1.19 6.279 3.572 8.562 2.379 2.279 6.136 2.95 11.276 1.995 44.163-14.653 80.185-41.062 108.068-79.226 27.88-38.161 41.825-81.126 41.825-128.906-.01-39.771-9.818-76.454-29.414-110.049z0:["gRSg2Cub6pV-Lwr37sxzA",[[["",{"children":["blog",{"children":[["slug","devto-1656028","d"],{"children":["__PAGE__?{\"slug\":\"devto-1656028\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","devto-1656028","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"min-h-screen bg-background font-sans antialiased max-w-2xl mx-auto py-12 sm:py-24 px-6 __variable_18454d","children":[["$","$L6",null,{"attribute":"class","defaultTheme":"light","children":["$","$L7",null,{"delayDuration":0,"children":[["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","div",null,{"className":"pointer-events-none fixed inset-x-0 bottom-0 z-30 mx-auto mb-4 flex origin-bottom h-full max-h-14","children":[["$","div",null,{"className":"fixed bottom-0 inset-x-0 h-16 w-full bg-background to-transparent backdrop-blur-lg [-webkit-mask-image:linear-gradient(to_top,black,transparent)] dark:bg-background"}],["$","$L8",null,{"className":"z-50 pointer-events-auto relative mx-auto flex min-h-full h-full items-center px-1 bg-background [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)] transform-gpu dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset] ","children":[[["$","$L9","/",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"/","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-home size-4","children":[["$","path","y5dka4",{"d":"m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"}],["$","polyline","e2us08",{"points":"9 22 9 12 15 12 15 22"}],"$undefined"]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"Home"}]}]]}]}],["$","$L9","/blog",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"/blog","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-notebook size-4","children":[["$","path","aawbzj",{"d":"M2 6h4"}],["$","path","l0bgd4",{"d":"M2 10h4"}],["$","path","1gsvsf",{"d":"M2 14h4"}],["$","path","1bu2t1",{"d":"M2 18h4"}],["$","rect","1nb95v",{"width":"16","height":"20","x":"4","y":"2","rx":"2"}],["$","path","rotuqe",{"d":"M16 2v20"}],"$undefined"]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"Blog"}]}]]}]}],["$","$L9","/ebook",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"/ebook","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-book size-4","children":[["$","path","t4utmx",{"d":"M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20"}],"$undefined"]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"Free Ebook"}]}]]}]}]],["$","$Le",null,{"orientation":"vertical","className":"h-full"}],[["$","$L9","GitHub",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"https://github.com/daviidy","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"viewBox":"0 0 438.549 438.549","className":"size-4","children":["$","path",null,{"fill":"currentColor","d":"$f"}]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"GitHub"}]}]]}]}],["$","$L9","LinkedIn",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"https://www.linkedin.com/in/nda-yao/","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"viewBox":"0 0 24 24","xmlns":"http://www.w3.org/2000/svg","className":"size-4","children":[["$","title",null,{"children":"LinkedIn"}],["$","path",null,{"fill":"currentColor","d":"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"}]]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"LinkedIn"}]}]]}]}],["$","$L9","X",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"https://x.com/davidyao_dev","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"viewBox":"0 0 24 24","xmlns":"http://www.w3.org/2000/svg","className":"size-4","children":[["$","title",null,{"children":"X"}],["$","path",null,{"fill":"currentColor","d":"M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"}]]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"X"}]}]]}]}],["$","$L9","Youtube",{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$Lc",null,{"href":"https://www.youtube.com/@davidyao_dev","className":"inline-flex items-center justify-center whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground rounded-full size-12","children":["$","svg",null,{"width":"32px","height":"32px","viewBox":"0 0 32 32","fill":"currentColor","xmlns":"http://www.w3.org/2000/svg","className":"size-4","children":[["$","title",null,{"children":"youtube"}],["$","path",null,{"d":"M29.41,9.26a3.5,3.5,0,0,0-2.47-2.47C24.76,6.2,16,6.2,16,6.2s-8.76,0-10.94.59A3.5,3.5,0,0,0,2.59,9.26,36.13,36.13,0,0,0,2,16a36.13,36.13,0,0,0,.59,6.74,3.5,3.5,0,0,0,2.47,2.47C7.24,25.8,16,25.8,16,25.8s8.76,0,10.94-.59a3.5,3.5,0,0,0,2.47-2.47A36.13,36.13,0,0,0,30,16,36.13,36.13,0,0,0,29.41,9.26ZM13.2,20.2V11.8L20.47,16Z"}]]}]}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"Youtube"}]}]]}]}]],["$","$Le",null,{"orientation":"vertical","className":"h-full py-2"}],["$","$L9",null,{"children":["$","$La",null,{"children":[["$","$Lb",null,{"asChild":true,"children":["$","$L10",null,{}]}],["$","$Ld",null,{"children":["$","p",null,{"children":"Theme"}]}]]}]}]]}]]}]]}]}],["$","script",null,{"dangerouslySetInnerHTML":{"__html":"\n              (function() {\n                var s = document.createElement('script');\n                s.type = 'text/javascript';\n                s.async = true;\n                s.src = 'https://static.klaviyo.com/onsite/js/klaviyo.js?company_id=Yxt67z';\n                var h = document.getElementsByTagName('script')[0];\n                h.parentNode.insertBefore(s, h);\n              })();\n            "}}]]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"https://david-yao.com/_next/static/css/4597d76e57872ca6.css","precedence":"next","crossOrigin":"$undefined"}]],"$L11"]]]]
11:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"API security: How to implement Authentication and Authorization with AWS Cognito in Spring Boot | Nda David Yao"}],["$","meta","3",{"name":"description","content":"When I implemented the authentication and authorization process with Spring Security 6, I didn't find..."}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","6",{"property":"og:title","content":"API security: How to implement Authentication and Authorization with AWS Cognito in Spring Boot"}],["$","meta","7",{"property":"og:description","content":"When I implemented the authentication and authorization process with Spring Security 6, I didn't find..."}],["$","meta","8",{"property":"og:url","content":"https://dev.to/daviidy/api-security-how-to-implement-authentication-and-authorization-with-aws-cognito-in-spring-boot-4713"}],["$","meta","9",{"property":"og:image","content":"https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F5nhmkfcunl69vng3nxoi.png"}],["$","meta","10",{"property":"og:type","content":"article"}],["$","meta","11",{"property":"article:published_time","content":"2023-11-23T01:14:15Z"}],["$","meta","12",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","13",{"name":"twitter:title","content":"API security: How to implement Authentication and Authorization with AWS Cognito in Spring Boot"}],["$","meta","14",{"name":"twitter:description","content":"When I implemented the authentication and authorization process with Spring Security 6, I didn't find..."}],["$","meta","15",{"name":"twitter:image","content":"https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F5nhmkfcunl69vng3nxoi.png"}],["$","link","16",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","17",{"name":"next-size-adjust"}]]
1:null
12:"$Sreact.suspense"
14:I[8173,["231","static/chunks/231-2d095471957ff3d5.js","173","static/chunks/173-06ea4b2e1871cc35.js","308","static/chunks/app/blog/%5Bslug%5D/page-180ef92bcd4a6ad4.js"],"Image"]
13:T1e27c,<p>When I implemented the authentication and authorization process with Spring Security 6, I didn't find any helpful and updated articles on this matter. So, I'll save you some time and show you how you can do that. In this blog post, we'll focus on implementing the registration, login processes, and the JWT Token authorization with AWS Cognito. You're welcome, let's get started!</p>
<h2>What is AWS Cognito</h2>
<p>Amazon Cognito is a product from Amazon Web Services (AWS) that controls user authentication and access for mobile apps. It's an identity platform for web and mobile apps.</p>
<p>Cognito's main features include:</p>
<ul>
<li>User directory</li>
<li>Authentication server</li>
<li>Authorization service</li>
<li>User sign-up and authentication</li>
<li>Temporary security credentials</li>
<li>Session management</li>
<li>Forgotten password functionality</li>
</ul>
<p><img src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/ii8wzu2bpm4ijw7qwz6p.png" alt="Image description"></p>
<p>Cognito also provides a secure identity store that can scale to millions of users. This store securely stores user profile data for users who sign up directly and for federated users who sign in with external identity providers.</p>
<p>You can learn more on <a href="https://aws.amazon.com/cognito/faqs/#:~:text=Amazon%20Cognito%20lets%20you%20easily,service%20behind%20Amazon%20API%20Gateway.">their FAQ page</a>.</p>
<h2>The project</h2>
<p>Let's build an app like <a href="pramp.com">pramp.com</a>.</p>
<ul>
<li>Users can obviously register and log in.</li>
<li>Admin can create many questions</li>
<li>Default users can create many interview sessions</li>
<li>Each interview session has 2 questions from the same type</li>
</ul>
<p>Here is the ERD for more understanding</p>
<p><img src="https://dev-to-uploads.s3.amazonaws.com/uploads/articles/clbkidye0bl2dpk5gh87.png" alt="Image description"></p>
<p>I will assume that you already know how to install Spring Boot. Just make sure that you have the following dependencies in your <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>pom.xml</span></span></code></span> file</p>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="xml" data-theme="github-dark github-light"><code data-language="xml" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">&#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>org.springframework.boot&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>spring-boot-starter-security&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        &#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>com.amazonaws&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>aws-java-sdk-cognitoidp&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">version</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>1.11.934&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">version</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        &#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>mysql&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>mysql-connector-java&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">version</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>8.0.26&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">version</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        &#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">&#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>org.springframework.boot&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">groupId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            &#x3C;</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">>spring-boot-starter-oauth2-resource-server&#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">artifactId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        &#x3C;/</span><span style="--shiki-dark:#85E89D;--shiki-light:#22863A">dependency</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">></span></span></code></pre></figure>
<p>Let's break down each dependency:</p>
<ol>
<li>
<p><strong>spring-boot-starter-security:</strong> is part of the Spring Boot framework and provides a comprehensive set of security-related features.</p>
<ul>
<li>Authentication: Helps in user authentication.</li>
<li>Authorization: Supports role-based and permission-based access control.</li>
<li>Common security configurations out of the box.</li>
<li>Integration with various authentication providers.</li>
</ul>
</li>
<li>
<p><strong>aws-java-sdk-cognitoidp:</strong> is part of the AWS SDK for Java and specifically focuses on Amazon Cognito Identity Pools.</p>
<ul>
<li>Provides Java APIs for interacting with Amazon Cognito Identity Pools.</li>
<li>Enables your Java application to integrate with Amazon Cognito for user management and authentication.</li>
<li>Includes functionality for user sign-up, sign-in, and other identity-related operations.</li>
</ul>
</li>
<li>
<p><strong>mysql-connector-java:</strong> is the official JDBC driver for MySQL databases, allowing Java applications to connect and interact with MySQL databases. Because you will need to create a local database. Look up online on how to do it with IntelliJ.</p>
</li>
<li>
<p><strong>spring-boot-starter-oauth2-resource-server:</strong> is part of Spring Boot and is designed to set up an OAuth 2.0 Resource Server.</p>
<ul>
<li>Configures the application to act as a resource server, capable of processing and validating OAuth 2.0 access tokens.</li>
<li>Allows the application to secure its resources and endpoints using OAuth 2.0 authentication and authorization.</li>
</ul>
</li>
</ol>
<h2>The architecture:</h2>
<p>We'll use the Domain Driven Design principles:</p>
<ul>
<li>controller: For handling HTTP requests and defining endpoints.</li>
<li>service: For implementing business logic.</li>
<li>repository: For data access to interact with databases like DynamoDB.</li>
<li>model: For defining domain entities and value objects.</li>
<li>requests: We could use Data Transfer Objects (DTO) that encapsulate data passed between layers. But for this project, we will use request classes, which serve as a form of DTO. Those classes define the structure of the data you expect to receive in your HTTP request.</li>
<li>config: For Spring configuration classes.</li>
<li>security: For security-related classes.</li>
</ul>
<p>Here is what your <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>src/main</span></span></code></span> folder should look like:</p>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="plaintext" data-theme="github-dark github-light"><code data-language="plaintext" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span>├── java</span></span>
<span data-line=""><span>│   └── com</span></span>
<span data-line=""><span>│       └── example</span></span>
<span data-line=""><span>│           └── chat_app</span></span>
<span data-line=""><span>│               ├── ChatAppApplication.java</span></span>
<span data-line=""><span>│               ├── config</span></span>
<span data-line=""><span>│               │   ├── CognitoConfig.java</span></span>
<span data-line=""><span>│               │   └── SecurityConfig.java</span></span>
<span data-line=""><span>│               ├── controller</span></span>
<span data-line=""><span>│               │   ├── QuestionController.java</span></span>
<span data-line=""><span>│               │   └── UserController.java</span></span>
<span data-line=""><span>│               ├── dto</span></span>
<span data-line=""><span>│               ├── model</span></span>
<span data-line=""><span>│               │   ├── Question.java</span></span>
<span data-line=""><span>│               │   └── User.java</span></span>
<span data-line=""><span>│               ├── repository</span></span>
<span data-line=""><span>│               │   ├── QuestionRepository.java</span></span>
<span data-line=""><span>│               │   └── UserRepository.java</span></span>
<span data-line=""><span>│               ├── requests</span></span>
<span data-line=""><span>│               │   ├── CreateQuestionRequest.java</span></span>
<span data-line=""><span>│               │   ├── UserLoginRequest.java</span></span>
<span data-line=""><span>│               │   └── UserRegistrationRequest.java</span></span>
<span data-line=""><span>│               ├── security</span></span>
<span data-line=""><span>│               └── service</span></span>
<span data-line=""><span>│                   ├── CognitoService.java</span></span>
<span data-line=""><span>│                   ├── QuestionService.java</span></span>
<span data-line=""><span>│                   ├── QuestionServiceImpl.java</span></span>
<span data-line=""><span>│                   ├── UserService.java</span></span>
<span data-line=""><span>│                   └── UserServiceImpl.java</span></span>
<span data-line=""><span>└── resources</span></span>
<span data-line=""><span>    ├── application.properties</span></span>
<span data-line=""><span>    ├── simple.priv</span></span>
<span data-line=""><span>    ├── static</span></span>
<span data-line=""><span>    └── templates</span></span></code></pre></figure>
<h2>Registration and Login</h2>
<ul>
<li>Create a Cognito user pool: check <a href="https://docs.aws.amazon.com/cognito/latest/developerguide/tutorial-create-user-pool.html">this tutorial</a> or <a href="https://www.youtube.com/watch?app=desktop&#x26;v=SZqZ3dXO7Jo">this video</a> to do it.</li>
<li>Add the following to your application.properties file</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.security.oauth2.client.registration.cognito.client</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">id</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">your_cognito_app_client_id</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.security.oauth2.client.registration.cognito.client</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">secret</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">your_cognito_app_client_secret</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.security.oauth2.client.registration.cognito.scope</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">openid</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.security.oauth2.client.provider.cognito.issuer</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">uri</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">https</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">:</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">//cognito-idp.us-east-2.amazonaws.com/us-east-2_EDjR6VYYS https://cognito-idp.&#x3C;REGION>.amazonaws.com/&#x3C;POOL Id></span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">aws.accessKeyId</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">aws_access_key</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">aws.secretKey</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">aws_secret_key</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">aws.region</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">aws_region</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.datasource.url</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">database_uri</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.datasource.username</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">database_username</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.datasource.password</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">database_password</span></span></code></pre></figure>
<ul>
<li>Add the controller actions for your login and register routes in the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>UserController</span></span></code></span>:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Autowired</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> UserServiceImpl userService;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">PostMapping</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">value</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "/register"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">consumes</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"application/json"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">})</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">&#x3C;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">User</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">></span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> registerUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Valid</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">RequestBody</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> UserRegistrationRequest userRegistrationRequest) {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        System.out.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">println</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(userRegistrationRequest);</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        // Perform user registration</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        User registeredUser </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> userService.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">registerUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(userRegistrationRequest);</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (registeredUser </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">!=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> null</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">ok</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(registeredUser);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">status</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(HttpStatus.INTERNAL_SERVER_ERROR).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">build</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">PostMapping</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/login"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">&#x3C;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">User</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">></span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> loginUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Valid</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">RequestBody</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> UserLoginRequest userLoginRequest) {</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        // Perform user login</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        User loggedInUser </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> userService.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">loginUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(userLoginRequest.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(), userLoginRequest.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">());</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        if</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (loggedInUser </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">!=</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> null</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            // Successful login</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">ok</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(loggedInUser);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">else</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            // Invalid login, return an appropriate response</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">status</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(HttpStatus.UNAUTHORIZED).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">build</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span></code></pre></figure>
<ul>
<li>Add the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>registerUser</span></span></code></span> and <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>loginUser</span></span></code></span> methods in the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>UserService</span></span></code></span> interface and implement them in the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>UserServiceImpl</span></span></code></span> class:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> interface</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> UserService</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    User </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">registerUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(UserRegistrationRequest </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">userRegistrationRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    User </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">loginUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">username</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">password</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span></code></pre></figure>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Service</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> UserServiceImpl</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> implements</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> UserService</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Autowired</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> UserRepository userRepository;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Autowired</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> CognitoService cognitoService;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Override</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> User </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">registerUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(UserRegistrationRequest </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">userRegistrationRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        String username </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> userRegistrationRequest.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        String password </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> userRegistrationRequest.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        String email </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> userRegistrationRequest.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getEmail</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        // Register the user with Amazon Cognito</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> cognitoService.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">registerUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(username, email, password);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Override</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> User </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">loginUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">username</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">password</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> cognitoService.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">loginUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(username, password);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span></code></pre></figure>
<ul>
<li>Implement the registration and login logic in the CognitoService:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${spring.security.oauth2.client.registration.cognito.client-id}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String clientId;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${spring.security.oauth2.client.registration.cognito.client-secret}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String clientSecret;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${spring.security.oauth2.client.registration.cognito.scope}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String scope;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${spring.security.oauth2.client.provider.cognito.issuer-uri}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String issuerUri;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Autowired</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> AWSCognitoIdentityProvider cognitoIdentityProvider;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Autowired</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> UserRepository userRepository;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> User </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">registerUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String username, String email, String password) {</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        // Set up the AWS Cognito registration request</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        SignUpRequest signUpRequest </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> SignUpRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withClientId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(clientId)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(username)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(password)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withUserAttributes</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">                        new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> AttributeType</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">().</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withName</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"email"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withValue</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(email)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                );</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        // Register the user with Amazon Cognito</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        try</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            SignUpResult signUpResponse </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> cognitoIdentityProvider.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">signUp</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(signUpRequest);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            User registeredUser </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> User</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            registeredUser.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(username);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            registeredUser.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setEmail</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(email);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            registeredUser.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(password);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> userRepository.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">save</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(registeredUser);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">catch</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (Exception </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">e</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            throw</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> RuntimeException</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"User registration failed: "</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> +</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> e.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getMessage</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(), e);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> User </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">loginUser</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String username, String password) {</span></span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">        // Set up the authentication request</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        InitiateAuthRequest authRequest </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> InitiateAuthRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withAuthFlow</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"USER_PASSWORD_AUTH"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withClientId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(clientId)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withAuthParameters</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                        Map.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">of</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">                                "USERNAME"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, username,   </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">// Use email as the username</span></span>
<span data-line=""><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">                                "PASSWORD"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, password</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                        )</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                );</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        try</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            InitiateAuthResult authResult </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> cognitoIdentityProvider.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">initiateAuth</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(authRequest);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            System.out.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">println</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(authResult);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            AuthenticationResultType authResponse </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> authResult.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getAuthenticationResult</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            // At this point, the user is successfully authenticated, and you can access JWT tokens:</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            String accessToken </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> authResponse.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getAccessToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            String idToken </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> authResponse.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getIdToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            String refreshToken </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> authResponse.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getRefreshToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">            // You can decode and verify the JWT tokens for user information</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            User loggedInUser </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> User</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            loggedInUser.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(username);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            loggedInUser.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setAccessToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(accessToken); </span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">// Store the token for future requests</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> loggedInUser;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        } </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">catch</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (Exception </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">e</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">            throw</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> RuntimeException</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"User login failed: "</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> +</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> e.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getMessage</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(), e);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span></code></pre></figure>
<ul>
<li>Create the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>AWSCognitoIdentityProvider</span></span></code></span> bean in your <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>CognitoConfig</span></span></code></span> class:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Configuration</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> CognitoConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${aws.accessKeyId}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String accessKey;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${aws.secretKey}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String secretKey;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${aws.region}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String region;</span></span>
<span data-line=""> </span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Bean</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> AWSCognitoIdentityProvider </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">cognitoIdentityProvider</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        BasicAWSCredentials awsCredentials </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> BasicAWSCredentials</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(accessKey, secretKey);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> AWSCognitoIdentityProviderClientBuilder.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">standard</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withCredentials</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> AWSStaticCredentialsProvider</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(awsCredentials))</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withRegion</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(Regions.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">fromName</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(region))</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">build</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span></code></pre></figure>
<ul>
<li>Implement the UserLoginRequest and UserRegistrationRequest classes:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> UserLoginRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotBlank</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Username is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String username;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotBlank</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Password is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String password;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> username;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> password;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span></code></pre></figure>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> UserRegistrationRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotBlank</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Username is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String username;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotBlank</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Password is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String password;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Email</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Invalid email address"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String email;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">    // Getters and setters for the fields</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> username;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> password;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getEmail</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> email;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span>
<span data-line=""> </span></code></pre></figure>
<ul>
<li>Implement the User model:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Entity</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Table</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        name</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "users"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        uniqueConstraints</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">UniqueConstraint</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">columnNames</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "email"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">),</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">UniqueConstraint</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">columnNames</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "username"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> User</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">jakarta</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.persistence.Id</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Id</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">GeneratedValue</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">strategy</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> GenerationType.IDENTITY)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> int</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> id;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Column</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotEmpty</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Username is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Size</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">min</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> 5</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">max</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5"> 50</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String username;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Column</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotEmpty</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Email is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String email;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Column</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">NotEmpty</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">message</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "Password is required"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String password;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Transient</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String accessToken;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> void</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> setAccessToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">accessToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.accessToken </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> accessToken;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getAccessToken</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> accessToken;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> username;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getEmail</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> email;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> String </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> password;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> void</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> setUsername</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">username</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.username </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> username;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> void</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> setEmail</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">email</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.email </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> email;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> void</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> setPassword</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(String </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">password</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.password </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> password;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> void</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> setId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">int</span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209"> id</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) {</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">        this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.id </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> id;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> int</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> getId</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> id;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span></code></pre></figure>
<ul>
<li>Finally, add this to your SecurityConfig class:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Bean</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> SecurityFilterChain </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">filterChain</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(HttpSecurity http) throws Exception {</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        http.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">authorizeHttpRequests</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            requests </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> requests</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/admin"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">hasAnyRole</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"Admin"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"Editor"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/login"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">permitAll</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/register"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">permitAll</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/logout"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">permitAll</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">anyRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">authenticated</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        );</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        http.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">csrf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(AbstractHttpConfigurer</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">::</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">disable);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> http.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">build</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span></code></pre></figure>
<p>Now start your Spring app, open Postman, and ensure your app is connected to your database. Run the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>POST /register</span></span></code></span> request and you should get the following result:</p>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="json" data-theme="github-dark github-light"><code data-language="json" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">{</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">    "id"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#FDAEB7;--shiki-light:#B31D28;--shiki-dark-font-style:italic;--shiki-light-font-style:italic">&#x3C;user_id></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">    "username"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#FDAEB7;--shiki-light:#B31D28;--shiki-dark-font-style:italic;--shiki-light-font-style:italic">&#x3C;username></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">    "email"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#FDAEB7;--shiki-light:#B31D28;--shiki-dark-font-style:italic;--shiki-light-font-style:italic">&#x3C;email></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">    "password"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#FDAEB7;--shiki-light:#B31D28;--shiki-dark-font-style:italic;--shiki-light-font-style:italic">&#x3C;password></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">,</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">    "accessToken"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">: </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">null</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span></code></pre></figure>
<p>You should also be able to see the new user in your AWS Cognito app.
Run the <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>POST /login</span></span></code></span> request and you should get the following result:</p>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="plaintext" data-theme="github-dark github-light"><code data-language="plaintext" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span>{</span></span>
<span data-line=""><span>    "id": &#x3C;user_id>,</span></span>
<span data-line=""><span>    "username": &#x3C;username>,</span></span>
<span data-line=""><span>    "email": &#x3C;email>,</span></span>
<span data-line=""><span>    "password": null,</span></span>
<span data-line=""><span>    "accessToken": &#x3C;access_token>,</span></span>
<span data-line=""><span>}</span></span></code></pre></figure>
<p>Don't forget to confirm manually the user account from the AWS Cognito. You can look up the documentation to see how you can also do it using Spring Boot.</p>
<h2>Verifying authorization</h2>
<p>Spring Security supports protecting endpoints by using two forms of OAuth 2.0 Bearer Tokens:</p>
<ul>
<li>
<p>JWT</p>
</li>
<li>
<p>Opaque Tokens
We are going to use JWT. You can learn more about it in the <a href="https://docs.spring.io/spring-security/reference/servlet/oauth2/resource-server/index.html">Spring documentation</a>.
Spring Boot will do it by checking the token provided by our client (in this case, Postman), verifying if it's a valid Cognito token, and either returning success or unauthorized statuses.
For more</p>
</li>
<li>
<p>Update your <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>Securityconfig</span></span></code></span></p>
</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Configuration</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">EnableWebSecurity</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">public</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> class</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> SecurityConfig</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> final</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWSAlgorithm jwsAlgorithm </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWSAlgorithm.RS256;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> final</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWEAlgorithm jweAlgorithm </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWEAlgorithm.RSA_OAEP_256;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> final</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> EncryptionMethod encryptionMethod </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> EncryptionMethod.A256GCM;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${spring.security.oauth2.resourceserver.jwt.jwk-set-uri}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    URL jwkSetUri;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Value</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"${sample.jwe-key-value}"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    RSAPrivateKey key;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Bean</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> SecurityFilterChain </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">filterChain</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(HttpSecurity </span><span style="--shiki-dark:#FFAB70;--shiki-light:#E36209">http</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">throws</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> Exception {</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        http.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">authorizeHttpRequests</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">            requests </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> requests</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/admin"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">hasAnyRole</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"Admin"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"Editor"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/login"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">permitAll</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/register"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">permitAll</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">requestMatchers</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"/logout"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">)</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">permitAll</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">anyRequest</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                    .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">authenticated</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        )</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        .</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">oauth2ResourceServer</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">((oauth2) </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-></span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> oauth2.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">jwt</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">withDefaults</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()));</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        http.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">csrf</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(AbstractHttpConfigurer</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">::</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">disable);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> http.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">build</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Bean</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    JwtDecoder </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">jwtDecoder</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> NimbusJwtDecoder</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">jwtProcessor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">());</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWTProcessor&#x3C;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">SecurityContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">> </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">jwtProcessor</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        JWKSource&#x3C;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">SecurityContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">> jwsJwkSource </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> RemoteJWKSet&#x3C;>(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.jwkSetUri);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        JWSKeySelector&#x3C;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">SecurityContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">> jwsKeySelector </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWSVerificationKeySelector&#x3C;>(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.jwsAlgorithm,</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">                jwsJwkSource);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        JWKSource&#x3C;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">SecurityContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">> jweJwkSource </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ImmutableJWKSet&#x3C;>(</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">new</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> JWKSet</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">rsaKey</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">()));</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        JWEKeySelector&#x3C;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">SecurityContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">> jweKeySelector </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> JWEDecryptionKeySelector&#x3C;>(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.jweAlgorithm,</span></span>
<span data-line=""><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">                this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.encryptionMethod, jweJwkSource);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        ConfigurableJWTProcessor&#x3C;</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">SecurityContext</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">> jwtProcessor </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> DefaultJWTProcessor&#x3C;>();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        jwtProcessor.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setJWSKeySelector</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(jwsKeySelector);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        jwtProcessor.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">setJWEKeySelector</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(jweKeySelector);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> jwtProcessor;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> RSAKey </span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">rsaKey</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">() {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        RSAPrivateCrtKey crtKey </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> (RSAPrivateCrtKey) </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.key;</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        Base64URL n </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> Base64URL.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">encode</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(crtKey.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getModulus</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">());</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        Base64URL e </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> Base64URL.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">encode</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(crtKey.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">getPublicExponent</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">());</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> new</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> RSAKey.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">Builder</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(n, e).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">privateKey</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">this</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">.key).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">keyUse</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(KeyUse.ENCRYPTION).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">build</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">();</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">}</span></span></code></pre></figure>
<ul>
<li>Add this line to your <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>application.properties</span></span></code></span> file:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">spring.security.oauth2.resourceserver.jwt.jwk</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">set</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">uri</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">https</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">:</span><span style="--shiki-dark:#6A737D;--shiki-light:#6A737D">//cognito-idp.&#x3C;region>.amazonaws.com/&#x3C;userPoolID>/.well-known/jwks.json</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">sample.jwe</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">key</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">-</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">value</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> classpath</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">:</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">simple.priv</span></span></code></pre></figure>
<ul>
<li>Create a <span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>simple.priv</span></span></code></span> file and paste the following key. Or create your own RSA key:</li>
</ul>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="plaintext" data-theme="github-dark github-light"><code data-language="plaintext" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span>-----BEGIN PRIVATE KEY-----</span></span>
<span data-line=""><span>MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQDcWWomvlNGyQhA</span></span>
<span data-line=""><span>iB0TcN3sP2VuhZ1xNRPxr58lHswC9Cbtdc2hiSbe/sxAvU1i0O8vaXwICdzRZ1JM</span></span>
<span data-line=""><span>g1TohG9zkqqjZDhyw1f1Ic6YR/OhE6NCpqERy97WMFeW6gJd1i5inHj/W19GAbqK</span></span>
<span data-line=""><span>LhSHGHqIjyo0wlBf58t+qFt9h/EFBVE/LAGQBsg/jHUQCxsLoVI2aSELGIw2oSDF</span></span>
<span data-line=""><span>oiljwLaQl0n9khX5ZbiegN3OkqodzCYHwWyu6aVVj8M1W9RIMiKmKr09s/gf31Nc</span></span>
<span data-line=""><span>3WjvjqhFo1rTuurWGgKAxJLL7zlJqAKjGWbIT4P6h/1Kwxjw6X23St3OmhsG6HIn</span></span>
<span data-line=""><span>+jl1++MrAgMBAAECggEBAMf820wop3pyUOwI3aLcaH7YFx5VZMzvqJdNlvpg1jbE</span></span>
<span data-line=""><span>E2Sn66b1zPLNfOIxLcBG8x8r9Ody1Bi2Vsqc0/5o3KKfdgHvnxAB3Z3dPh2WCDek</span></span>
<span data-line=""><span>lCOVClEVoLzziTuuTdGO5/CWJXdWHcVzIjPxmK34eJXioiLaTYqN3XKqKMdpD0ZG</span></span>
<span data-line=""><span>mtNTGvGf+9fQ4i94t0WqIxpMpGt7NM4RHy3+Onggev0zLiDANC23mWrTsUgect/7</span></span>
<span data-line=""><span>62TYg8g1bKwLAb9wCBT+BiOuCc2wrArRLOJgUkj/F4/gtrR9ima34SvWUyoUaKA0</span></span>
<span data-line=""><span>bi4YBX9l8oJwFGHbU9uFGEMnH0T/V0KtIB7qetReywkCgYEA9cFyfBIQrYISV/OA</span></span>
<span data-line=""><span>+Z0bo3vh2aL0QgKrSXZ924cLt7itQAHNZ2ya+e3JRlTczi5mnWfjPWZ6eJB/8MlH</span></span>
<span data-line=""><span>Gpn12o/POEkU+XjZZSPe1RWGt5g0S3lWqyx9toCS9ACXcN9tGbaqcFSVI73zVTRA</span></span>
<span data-line=""><span>8J9grR0fbGn7jaTlTX2tnlOTQ60CgYEA5YjYpEq4L8UUMFkuj+BsS3u0oEBnzuHd</span></span>
<span data-line=""><span>I9LEHmN+CMPosvabQu5wkJXLuqo2TxRnAznsA8R3pCLkdPGoWMCiWRAsCn979TdY</span></span>
<span data-line=""><span>QbqO2qvBAD2Q19GtY7lIu6C35/enQWzJUMQE3WW0OvjLzZ0l/9mA2FBRR+3F9A1d</span></span>
<span data-line=""><span>rBdnmv0c3TcCgYEAi2i+ggVZcqPbtgrLOk5WVGo9F1GqUBvlgNn30WWNTx4zIaEk</span></span>
<span data-line=""><span>HSxtyaOLTxtq2odV7Kr3LGiKxwPpn/T+Ief+oIp92YcTn+VfJVGw4Z3BezqbR8lA</span></span>
<span data-line=""><span>Uf/+HF5ZfpMrVXtZD4Igs3I33Duv4sCuqhEvLWTc44pHifVloozNxYfRfU0CgYBN</span></span>
<span data-line=""><span>HXa7a6cJ1Yp829l62QlJKtx6Ymj95oAnQu5Ez2ROiZMqXRO4nucOjGUP55Orac1a</span></span>
<span data-line=""><span>FiGm+mC/skFS0MWgW8evaHGDbWU180wheQ35hW6oKAb7myRHtr4q20ouEtQMdQIF</span></span>
<span data-line=""><span>snV39G1iyqeeAsf7dxWElydXpRi2b68i3BIgzhzebQKBgQCdUQuTsqV9y/JFpu6H</span></span>
<span data-line=""><span>c5TVvhG/ubfBspI5DhQqIGijnVBzFT//UfIYMSKJo75qqBEyP2EJSmCsunWsAFsM</span></span>
<span data-line=""><span>TszuiGTkrKcZy9G0wJqPztZZl2F2+bJgnA6nBEV7g5PA4Af+QSmaIhRwqGDAuROR</span></span>
<span data-line=""><span>47jndeyIaMTNETEmOnms+as17g==</span></span>
<span data-line=""><span>-----END PRIVATE KEY-----</span></span></code></pre></figure>
<p>That's it. Now let's say you want to create a question. Simply create the endpoint and add the controller action in the QuestionController:</p>
<figure data-rehype-pretty-code-figure=""><pre style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff" tabindex="0" data-language="java" data-theme="github-dark github-light"><code data-language="java" data-theme="github-dark github-light" style="display: grid;"><span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">Autowired</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    private</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> QuestionServiceImpl questionService;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">PostMapping</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(</span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">value</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62"> "/questions"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">, </span><span style="--shiki-dark:#79B8FF;--shiki-light:#005CC5">consumes</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49"> =</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> {</span><span style="--shiki-dark:#9ECBFF;--shiki-light:#032F62">"application/json"</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">})</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">    public</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">&#x3C;</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">Question</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">></span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1"> createQuestion</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(@</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">AuthenticationPrincipal</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> Jwt jwt, @</span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">RequestBody</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> CreateQuestionRequest request) {</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">        Question createdQuestion </span><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">=</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> questionService.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">createQuestion</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(jwt, request);</span></span>
<span data-line=""><span style="--shiki-dark:#F97583;--shiki-light:#D73A49">        return</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E"> ResponseEntity.</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">status</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(HttpStatus.CREATED).</span><span style="--shiki-dark:#B392F0;--shiki-light:#6F42C1">body</span><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">(createdQuestion);</span></span>
<span data-line=""><span style="--shiki-dark:#E1E4E8;--shiki-light:#24292E">    }</span></span></code></pre></figure>
<p><span data-rehype-pretty-code-figure=""><code data-language="plaintext" data-theme="github-dark github-light" style="--shiki-dark:#e1e4e8;--shiki-light:#24292e;--shiki-dark-bg:#24292e;--shiki-light-bg:#fff"><span data-line=""><span>@AuthenticationPrincipal</span></span></code></span> is used to inject the JSON Web Token (JWT) directly into the method parameter and check if it's valid one.
I'll let you implement the logic in the service, request, repository and model. Ciao.</p>2:["$","section",null,{"id":"blog","children":[["$","script",null,{"type":"application/ld+json","suppressHydrationWarning":true,"dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"API security: How to implement Authentication and Authorization with AWS Cognito in Spring Boot\",\"datePublished\":\"2023-11-23T01:14:15Z\",\"dateModified\":\"2023-11-23T01:14:15Z\",\"description\":\"When I implemented the authentication and authorization process with Spring Security 6, I didn't find...\",\"image\":\"https://media2.dev.to/dynamic/image/width=1000,height=420,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F5nhmkfcunl69vng3nxoi.png\",\"url\":\"https://dev.to/daviidy/api-security-how-to-implement-authentication-and-authorization-with-aws-cognito-in-spring-boot-4713\",\"author\":{\"@type\":\"Person\",\"name\":\"Nda David Yao\"}}"}}],["$","h1",null,{"className":"title font-medium text-2xl tracking-tighter max-w-[650px]","children":"API security: How to implement Authentication and Authorization with AWS Cognito in Spring Boot"}],["$","div",null,{"className":"flex justify-between items-center mt-2 mb-8 text-sm max-w-[650px]","children":[["$","$12",null,{"fallback":["$","p",null,{"className":"h-5"}],"children":["$","p",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":"November 22, 2023 (1y ago)"}]}],["$","$Lc",null,{"href":"https://dev.to/daviidy/api-security-how-to-implement-authentication-and-authorization-with-aws-cognito-in-spring-boot-4713","target":"_blank","rel":"noopener noreferrer","className":"text-sm text-neutral-600 dark:text-neutral-400 hover:text-neutral-800 dark:hover:text-neutral-200","children":"Read on Dev.to →"}]]}],["$","article",null,{"className":"prose dark:prose-invert max-w-none prose-pre:bg-neutral-100 dark:prose-pre:bg-neutral-900 prose-pre:border prose-pre:border-neutral-200 dark:prose-pre:border-neutral-800 prose-pre:rounded-lg prose-code:before:content-none prose-code:after:content-none prose-code:font-normal prose-code:bg-neutral-100 dark:prose-code:bg-neutral-900 prose-code:rounded prose-code:px-1 prose-code:py-0.5 prose-code:text-neutral-800 dark:prose-code:text-neutral-200 prose-a:text-blue-500 hover:prose-a:text-blue-400 prose-headings:font-medium prose-h2:text-xl prose-h2:tracking-tight prose-p:leading-7 prose-li:leading-7","dangerouslySetInnerHTML":{"__html":"$13"}}],["$","div",null,{"className":"mt-16","children":[["$","div",null,{"className":"flex items-center justify-between mb-8","children":[["$","h2",null,{"className":"text-xl font-medium tracking-tighter","children":["Comments (",2,")"]}],["$","$Lc",null,{"href":"https://dev.to/daviidy/api-security-how-to-implement-authentication-and-authorization-with-aws-cognito-in-spring-boot-4713#comments","target":"_blank","rel":"noopener noreferrer","children":"Add Comment","className":"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2"}]]}],["$","div",null,{"className":"space-y-8","children":[["$","div",null,{"className":"flex gap-4","children":[["$","div",null,{"className":"flex-shrink-0","children":["$","$L14",null,{"src":"https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F1041276%2F3b6dadfd-e1b9-47ad-87ec-d19a9cbcafe2.jpg","alt":"vdelitz","width":40,"height":40,"className":"rounded-full"}]}],["$","div",null,{"className":"flex-1","children":[["$","div",null,{"className":"flex items-center gap-2 mb-2","children":[["$","span",null,{"className":"font-medium","children":"vdelitz"}],["$","span",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":["@","vdelitz"]}],["$","span",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":["• ","November 23, 2023 (1y ago)"]}]]}],["$","div",null,{"className":"prose dark:prose-invert","dangerouslySetInnerHTML":{"__html":"<p>Nice article, thanks!</p>\n\n"}}],false]}]]}],["$","div",null,{"className":"flex gap-4","children":[["$","div",null,{"className":"flex-shrink-0","children":["$","$L14",null,{"src":"https://media2.dev.to/dynamic/image/width=640,height=640,fit=cover,gravity=auto,format=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Fuser%2Fprofile_image%2F1120282%2F9ecbab3b-8cda-4acd-92fc-bf4eb86d4bbc.jpeg","alt":"CedricLapi","width":40,"height":40,"className":"rounded-full"}]}],["$","div",null,{"className":"flex-1","children":[["$","div",null,{"className":"flex items-center gap-2 mb-2","children":[["$","span",null,{"className":"font-medium","children":"CedricLapi"}],["$","span",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":["@","cedriclapi"]}],["$","span",null,{"className":"text-sm text-neutral-600 dark:text-neutral-400","children":["• ","November 27, 2023 (1y ago)"]}]]}],["$","div",null,{"className":"prose dark:prose-invert","dangerouslySetInnerHTML":{"__html":"<p>Interesting!</p>\n\n"}}],false]}]]}]]}]]}]]}]
